FROM yi/tflow-vnc:latest

MAINTAINER Igor Rabkin <igor.rabkin@xiaoyi.com>

############################################################
#            Installing Caffe & Python Dependences         #
############################################################

RUN apt-get update && apt-get install -y \
         python3-distutils \
         python3-dev 		 

RUN apt-get update && apt-get install -y --no-install-recommends \ 
         mlocate \
         doxygen \		 
         libatlas-base-dev \ 
         libboost-all-dev \ 
         libgflags-dev \ 
         libgoogle-glog-dev \ 
         libhdf5-serial-dev \ 
         libleveldb-dev \ 
         liblmdb-dev \ 
         libopencv-dev \ 
         libprotobuf-dev \ 
         libsnappy-dev \
         libopenblas-dev \		 
         protobuf-compiler 
           
RUN ln -sfn /usr/bin/python3.6 /usr/bin/python && \
     python --version && \
     curl -fSsL -O ftp://jenkins-cloud/pub/Develop/get-pip.py && \
     python3.6 get-pip.py && \
     rm get-pip.py 
	 
	 
#######################################
#            Installing cmake         #
#######################################

RUN \
    cd ~ && \
    version=3.12 && \
    build=3 && \
    mkdir ~/temp && \
    cd temp && \
    wget https://cmake.org/files/v$version/cmake-$version.$build.tar.gz && \
    tar -xzvf cmake-$version.$build.tar.gz && \
    cd cmake-$version.$build && \
    ./bootstrap && \
    make -j$nc && \
    make install && \
    cmake --version && \
    cd ~ && \
    rm -rf temp
    
  
#######################################
#          Set ENV Variables          #
#######################################

ENV PYTHONPATH="${PYTHONPATH}:/opt/caffe/python"
ENV CUDA_ARCH_BIN="35 52 60 61" 
 
 
#######################################
#            Installing CAFFE         #
#######################################

RUN cd /opt && \
    git clone https://github.com/BVLC/caffe.git && \
    cd caffe/python && \
    sed -i 's/python-dateutil>=1.4,<2/python-dateutil>=2.6.1/g' requirements.txt && \
    for req in $(cat requirements.txt) pydot; do pip install $req; done && cd .. && \
    sed -i '425d' Makefile && \
    sed -i '424 a NVCCFLAGS += -D_FORCE_INLINES -ccbin=$(CXX) -Xcompiler -fPIC $(COMMON_FLAGS)' Makefile && \
    curl -OSL ftp://jenkins-cloud/pub/Tflow-VNC-Soft/Caffe/Makefile.config -o Makefile.config && \
    git clone https://github.com/NVIDIA/nccl.git && cd nccl && \
    sed -i '28d' makefiles/common.mk && \
    sed -i '28d' makefiles/common.mk && \
    sed -i '27 a CUDA8_GENCODE = -gencode=arch=compute_35,code=sm_35 \\' makefiles/common.mk && \
    make -j$nc install && cd .. && rm -rf nccl && \
    updatedb && \
    locate nccl| grep "libnccl.so" | tail -n1 | sed -r 's/^.*\.so\.//' && \
    mkdir build && \
    sed -i '35d' CMakeLists.txt && \
    sed -i '34 a set(python_version "3" CACHE STRING "Specify which Python version to use")' CMakeLists.txt && \
    cd build && \
    cmake -D CUDA_ARCH_NAME=Manual -D CUDA_ARCH_BIN="${CUDA_ARCH_BIN}" \
          -D USE_CUDNN=1 -D USE_NCCL=1 .. && \
    make -j$nc && \
    make pycaffe -j$nc && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*
	
ENV CAFFE_ROOT=/opt/caffe	
ENV PYCAFFE_ROOT $CAFFE_ROOT/python
ENV PATH $CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH
RUN echo "$CAFFE_ROOT/build/lib" >> /etc/ld.so.conf.d/caffe.conf && ldconfig
 
 
################################################################## 
#              Pick up some TF dependencies                      #
##################################################################

RUN apt-get update && apt-get install -y --no-install-recommends \ 		 
    libfreetype6-dev \
    libpng-dev \ 
    libzmq3-dev \
    libcurl3-dev \
    libgoogle-perftools-dev \		 
    pkg-config \  
    python3-tk && \    
    apt-get clean && \ 
    rm -rf /var/lib/apt/lists/* && \
    curl -SL ftp://jenkins-cloud/pub/Tflow-VNC-Soft/Caffe/tf_requirements.txt -o /tmp/tf_requirements.txt && \
    for tf_req in $(cat /tmp/tf_requirements.txt); do pip --no-cache-dir install $tf_req; done && \
    python -m ipykernel.kernelspec && \
    apt-get clean && \ 
    rm -rf /var/lib/apt/lists/*
	
	
################################################################## 
#              Installing XIAOYI Packages                        #
##################################################################

RUN python3.6 -m pip --no-cache-dir install --index-url http://192.168.1.102:8888 xiaoyi --trusted-host 192.168.1.102 --upgrade &&\
    apt-get clean && \ 
    rm -rf /var/lib/apt/lists/*
    
 
###################################
# Install TensorFlow GPU version. #
###################################

RUN cd /
ARG FTP_PATH
ARG FILE_NAME
RUN curl -OSL ${FTP_PATH} -o ${FILE_NAME} && \
    pip --no-cache-dir install --upgrade ${FILE_NAME} && \
    rm -f ${FILE_NAME}  

  
##################################################
# Configure the build for our CUDA configuration #
##################################################

ENV CI_BUILD_PYTHON python
ENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH
ENV TF_NEED_CUDA 1
ENV TF_CUDA_COMPUTE_CAPABILITIES=5.2,6.1
ENV TF_CUDA_VERSION=10.0
ENV TF_CUDNN_VERSION=7
ENV TF_NCCL_VERSION=2.4
